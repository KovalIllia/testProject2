{"uid":"65b09e8da2c52ed","name":"test_update_pet_with_form","fullName":"tests.test_pet_api#test_update_pet_with_form","historyId":"656720f08623ee68515bcd5371bc9c97","time":{"start":1758918401273,"stop":1758918406620,"duration":5347},"status":"failed","statusMessage":"AssertionError: Expected status code: 200, but got: 404","statusTrace":"pet_api = <src.api.pet_api.PetApi object at 0x7f20732a2f70>\npet_payload = {'category': {'id': 1073502378, 'name': 'defense'}, 'id': 1192906806, 'name': 'Rex', 'photoUrls': ['https://dummyimage.com/295x116'], ...}\n\n    @pytest.mark.flaky(reruns=3,reruns_delay=2)\n    def test_update_pet_with_form(pet_api,pet_payload):\n    \n        creating_pet = pet_api.add_pet(pet_payload)\n        time.sleep(3)\n        created_pet = creating_pet.json()\n        pet_id = created_pet[\"id\"]\n    \n    \n        PetWaiter.wait_for_pet(pet_api, pet_id,expected_status=200)\n        response_with_update = pet_api.update_pet_with_form_data(\n            pet_id,\n            name=\"Lopik\",\n            status=\"sold\"\n        )\n    \n>       Checking.check_status_code(response=response_with_update, status_code=200)\n\ntests/test_pet_api.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(response: requests.Response, status_code):\n        \"\"\"\n        Checks the response status code. Can handle a single integer or a list/tuple of integers.\n        \"\"\"\n        if isinstance(status_code, (list, tuple)):\n            assert response.status_code in status_code, \\\n                f\"Expected status codes: {status_code}, but got: {response.status_code}\"\n        else:\n>           assert response.status_code == status_code, \\\n                f\"Expected status code: {status_code}, but got: {response.status_code}\"\nE           AssertionError: Expected status code: 200, but got: 404\n\nutils/checking_methods.py:19: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1758918392746,"stop":1758918392748,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_client","time":{"start":1758918392748,"stop":1758918392748,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_api","time":{"start":1758918392748,"stop":1758918392748,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_payload","time":{"start":1758918401272,"stop":1758918401272,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected status code: 200, but got: 404","statusTrace":"pet_api = <src.api.pet_api.PetApi object at 0x7f20732a2f70>\npet_payload = {'category': {'id': 1073502378, 'name': 'defense'}, 'id': 1192906806, 'name': 'Rex', 'photoUrls': ['https://dummyimage.com/295x116'], ...}\n\n    @pytest.mark.flaky(reruns=3,reruns_delay=2)\n    def test_update_pet_with_form(pet_api,pet_payload):\n    \n        creating_pet = pet_api.add_pet(pet_payload)\n        time.sleep(3)\n        created_pet = creating_pet.json()\n        pet_id = created_pet[\"id\"]\n    \n    \n        PetWaiter.wait_for_pet(pet_api, pet_id,expected_status=200)\n        response_with_update = pet_api.update_pet_with_form_data(\n            pet_id,\n            name=\"Lopik\",\n            status=\"sold\"\n        )\n    \n>       Checking.check_status_code(response=response_with_update, status_code=200)\n\ntests/test_pet_api.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(response: requests.Response, status_code):\n        \"\"\"\n        Checks the response status code. Can handle a single integer or a list/tuple of integers.\n        \"\"\"\n        if isinstance(status_code, (list, tuple)):\n            assert response.status_code in status_code, \\\n                f\"Expected status codes: {status_code}, but got: {response.status_code}\"\n        else:\n>           assert response.status_code == status_code, \\\n                f\"Expected status code: {status_code}, but got: {response.status_code}\"\nE           AssertionError: Expected status code: 200, but got: 404\n\nutils/checking_methods.py:19: AssertionError","steps":[{"name":"POST /pet","time":{"start":1758918401273,"stop":1758918401666,"duration":393},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"GET /pet/{petId}","time":{"start":1758918404669,"stop":1758918405084,"duration":415},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"GET /pet/{petId}","time":{"start":1758918406085,"stop":1758918406348,"duration":263},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"POST /pet/1192906806","time":{"start":1758918406350,"stop":1758918406620,"duration":270},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":4,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_pet_api"},{"name":"host","value":"runnervm3ublj"},{"name":"thread","value":"2457-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_pet_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"65b09e8da2c52ed.json","parameterValues":[]}